# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build and Test

on:
  push:
    branches: 
      - '**'
  pull_request:
    branches: [ master, dev ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest codecov pytest-cov wheel
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=80 --statistics
    - name: Test with pytest
      run: |
        pytest --cov-report=xml --cov=ukat
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        verbose: false

  lint:

    runs-on: ubuntu-latest
    steps:
      - name: PEP8 messages in Pull Requests
        uses: grantmcconnaughey/lintly-flake8-github-action@v1.0
        if: github.event_name == 'pull_request'
        with:
          # The GitHub API token to create reviews with
          token: ${{ secrets.GITHUB_TOKEN }}
          # Fail if "new" violations detected or "any", default "new"
          failIf: new
          # Additional arguments to pass to flake8, default "." (current directory)
          args: "."
